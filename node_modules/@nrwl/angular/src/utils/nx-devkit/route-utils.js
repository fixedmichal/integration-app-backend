"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addRoute = void 0;
const tsquery_1 = require("@phenomnomnominal/tsquery");
const ts = require("typescript");
const ast_utils_1 = require("@nrwl/workspace/src/utilities/ast-utils");
const ast_utils_2 = require("./ast-utils");
function addRoute(tree, routesFile, route, lazy = true, routesConst, importPath) {
    if (!tree.exists(routesFile)) {
        throw new Error(`Path to parent routing declaration (${routesFile}) does not exist. Please ensure path is correct.`);
    }
    let routesFileContents = tree.read(routesFile, 'utf-8');
    if (!lazy) {
        let parentSourceFile = ts.createSourceFile(routesFile, routesFileContents, ts.ScriptTarget.Latest, true);
        parentSourceFile = (0, ast_utils_1.insertImport)(tree, parentSourceFile, routesFile, routesConst, importPath);
        routesFileContents = tree.read(routesFile, 'utf-8');
    }
    const ast = tsquery_1.tsquery.ast(routesFileContents);
    const ROUTES_ARRAY_SELECTOR = 'VariableDeclaration:has(ArrayType > TypeReference > Identifier[name=Route]) > ArrayLiteralExpression';
    const routesArrayNodes = (0, tsquery_1.tsquery)(ast, ROUTES_ARRAY_SELECTOR, {
        visitAllChildren: true,
    });
    const isRoutesArray = routesArrayNodes.length > 0;
    if (!isRoutesArray) {
        if (routesFileContents.includes('@NgModule')) {
            const sourceFile = ts.createSourceFile(routesFile, routesFileContents, ts.ScriptTarget.Latest, true);
            (0, ast_utils_2.addRouteToNgModule)(tree, routesFile, sourceFile, route);
            return;
        }
        else {
            throw new Error(`Routing file (${routesFile}) does not a routing configuration. Please ensure the parent contains a routing configuration.`);
        }
    }
    const newRoutesFileContents = `${routesFileContents.slice(0, routesArrayNodes[0].getStart() + 1)}
    ${route},${routesFileContents.slice(routesArrayNodes[0].getStart() + 1, -1)}`;
    tree.write(routesFile, newRoutesFileContents);
}
exports.addRoute = addRoute;
//# sourceMappingURL=route-utils.js.map